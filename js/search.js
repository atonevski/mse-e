// Generated by CoffeeScript 1.10.0
var cancelEl, inputEl, ipc, nextEl, prevEl, statusEl;

ipc = require('electron').ipcRenderer;

console.log("* enter search.coffee");

inputEl = document.getElementById('search-input');

prevEl = document.getElementById('search-prev');

nextEl = document.getElementById('search-next');

cancelEl = document.getElementById('search-cancel');

statusEl = document.getElementById('search-status');

nextEl.addEventListener('click', function() {
  if (!nextEl.disabled && inputEl.value.length > 0) {
    ipc.send('search-next', inputEl.value);
    return inputEl.focus();
  }
});

prevEl.addEventListener('click', function() {
  if (!prevEl.disabled && inputEl.value.length > 0) {
    ipc.send('search-prev', inputEl.value);
    return inputEl.focus();
  }
});

cancelEl.addEventListener('click', function() {
  statusEl.innerHTML = '';
  ipc.send('stop-search', inputEl.value);
  return console.log("stop-search");
});

inputEl.addEventListener('input', function() {
  if (inputEl.value.length === 0) {
    prevEl.disabled = true;
    nextEl.disabled = true;
    ipc.send('clear-search');
    inputEl.focus();
    return;
  }
  prevEl.disabled = false;
  nextEl.disabled = false;
  ipc.send('perform-search', inputEl.value);
  console.log("* PERFORM SEARCH " + inputEl.value);
  return inputEl.focus();
});

ipc.on('get-focus', function() {
  console.log('* got focus');
  inputEl.focus();
});

ipc.on('ipc-message', function(e, r) {
  console.log("* received message:", e.channel);
});

window.addEventListener("load", function(event) {
  console.log("Search DOM ready!");
  return ipc.on('search-results', function(event, result) {
    console.log("* Got search results:", result);
    statusEl.innerHTML = result.current + "/" + result.matches;
  });
});
